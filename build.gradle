// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://dl.bintray.com/dudu90/maven' }
        maven { url 'https://jitpack.io' }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
//            << "-Xlint:deprecation"
        }
    }

    project.gradle.startParameter.excludedTaskNames.add("lint")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define versions in a single place
ext {
//    // Sdk and tools
//    minSdkVersion = 10
//    targetSdkVersion = 25
//    compileSdkVersion = 25
//    buildToolsVersion = '25.0.3'
//
//    // App dependencies
    supportLibVersion = '27.1.1'
//    guavaVersion = '18.0'
    rxJavaVersion = '2.0.2'
    rxAndroidVersion = '2.0.2'
    javaxAnnotationVersion = '10.0-b28'
    daggerVersion = '2.16'
    gsonVersion = '2.8.5'
    loggerVersion = '2.2.0'
    okHttpVersion = '3.10.0'
    androidUtilCodeVersion = '1.17.2'
    glideVersion = '3.8.0'

    //analytics
    umengVersion = 'latest.integration'

    //test
    junitVersion = '4.12'
    assertJVersion = '3.10.0'
    mockitoVersion = '2.+'
//    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
//    runnerVersion = '0.5'
//    rulesVersion = '0.5'
//    espressoVersion = '2.2.2'

//    sqlbriteVersion = '0.7.0'
}


task wrapper(type: Wrapper) {
    description 'Creates the gradle wrapper.'
    gradleVersion '4.4'
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
    description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
    description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
    description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':app:connectedAndroidTest']) {
    description 'Run application acceptance tests.'
}

