apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.qtec.homestay"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    signingConfigs {
        debug {
            /* File strFile = new File("/home/shaojun/WorkSpaces/AndroidWorkspaces/Work/QuantumRouterAndroid/sign/smart_home_debug.jks")
             storeFile file(strFile)
             storePassword "qtec123456"
             keyAlias "debugkey0"
             keyPassword "qtec123456"*/
            //println strFile.absolutePath;
        }
        release {
            File strFile = new File("/home/shaojun/WorkSpaces/AndroidWorkspaces/Work/QuantumRouterAndroid/sign/smart_home_release.jks")
            storeFile file(strFile)
            storePassword "qtec123456"
            keyAlias "key0"
            keyPassword "qtec123456"
            // println strFile.absolutePath;
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false  // false表示不混淆，true表示混淆
            shrinkResources false //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false  // false表示不混淆，true表示混淆
            shrinkResources false //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            //Zipalign优化
            zipAlignEnabled true
            // 不显示Log
//            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    //3.0后开启Lambda
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    //    // If you need to add more flavors, consider using flavor dimensions.
    flavorDimensions "prod1"
    productFlavors {
        mock {
//            applicationIdSuffix = ".mock"
            dimension "prod1"
            applicationId = "com.qtec.homestay.mock"

        }
//        dev {
//            applicationIdSuffix = ".dev"
//        }
        prod {
            dimension "prod1"
            applicationId = "com.qtec.homestay"

        }
    }

//    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }

    project.gradle.startParameter.excludedTaskNames.add("lint")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:design:$rootProject.ext.supportLibVersion"
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api project(':data')
    implementation "com.orhanobut:logger:$rootProject.ext.loggerVersion"
    implementation "com.blankj:utilcode:$rootProject.ext.androidUtilCodeVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"
    compileOnly "org.glassfish:javax.annotation:$rootProject.ext.javaxAnnotationVersion"
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    implementation "com.umeng.analytics:analytics:$rootProject.ext.umengVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"


    api name:'uilibrary1-v0.0.7', ext:'aar'

}
